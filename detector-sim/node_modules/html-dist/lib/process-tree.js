'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.processTree = undefined;

var _html = require('./html');

var _treeManipulator = require('./tree-manipulator');

// node here will be body or head
function processTree(allConfig, node) {
  var nodeTag = node.tagName;
  var config = allConfig[nodeTag];

  if (!config) return node;

  // if you define tree, nothing else is allowed
  if (config.tree) {
    var treeManip = config.tree.call(null, (0, _treeManipulator.treeManipulator)(node));
    return treeManip.tree;
  } else {
    var newNode = node;
    if (config.remove) {
      newNode = remove(newNode, config.remove);
    }

    newNode = prepend(newNode, config.prepends || []);
    return append(node, config.appends || []);
  }
}

function remove(node, selector) {
  return (0, _treeManipulator.treeManipulator)(node).remove(selector).tree;
}

function prepend(node, prepends) {
  return manipulateTree(node, prepends.reverse(), 'prepend');
}

function append(node, appends) {
  return manipulateTree(node, appends, 'append');
}

function manipulateTree(node, ary, fnName) {
  return ary.reduce(function (newNode, item) {
    return (0, _treeManipulator.treeManipulator)(newNode)[fnName](item).tree;
  }, node);
}

exports.processTree = processTree;