'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (_ref) {
  var config = _ref.config,
      input = _ref.input;

  var tree = (0, _html.fromHtml)(input);
  var doctypes = (0, _html.getDoctype)(input);

  // TODO: move this into a module with tree fns
  tree = tree.filter(function (item) {
    return item.text != '' && item.text != '\n';
  });

  // TODO: this assumes tree[0] is the HTML tag - worth a check?
  var htmlChildren = tree[0].children;

  var body = htmlChildren.find(function (node) {
    return node.tagName === 'body';
  });
  var head = htmlChildren.find(function (node) {
    return node.tagName === 'head';
  });

  // TODO: process the head!
  var newHead = (0, _processTree.processTree)(config, head);
  var newBody = (0, _processTree.processTree)(config, body);

  var newHtmlChildren = htmlChildren.map(function (child) {
    if (child.tagName === 'body') {
      return newBody;
    } else if (child.tagName === 'head') {
      return newHead;
    } else {
      return child;
    }
  });

  tree[0].children = newHtmlChildren;

  var newHtml = doctypes + (0, _html.toHtml)(tree[0]);

  if (config.minify === true) {
    newHtml = (0, _htmlMinifier.minify)(newHtml, {
      collapseWhitespace: true
    });
  } else {
    // TODO: indent size being customisable would be cool
    newHtml = _html3.default.prettyPrint(newHtml, { indent_size: 2 });
  }

  if (config.outputFile || _index.args.output) {
    writeToFile(newHtml, config.outputFile ? config.outputFile : _index.args.output);
  } else {
    console.log(newHtml);
  }
};

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _index = require('./index');

var _html = require('./html');

var _processTree = require('./process-tree');

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _mkdirp = require('mkdirp');

var _mkdirp2 = _interopRequireDefault(_mkdirp);

var _htmlMinifier = require('html-minifier');

var _html2 = require('html');

var _html3 = _interopRequireDefault(_html2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function writeToFile(html, outfile) {
  var dirsToMake = _path2.default.dirname(outfile);
  (0, _mkdirp2.default)(dirsToMake, function (e) {
    // TODO: deal with error here
    console.log('Wrote to', outfile);
    _fs2.default.writeFile(outfile, html);
  });
}